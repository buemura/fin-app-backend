generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                      String     @id @default(uuid())
  name                    String
  email                   String     @unique
  password                String?
  isExternal              Boolean
  externalId              String?    @map("external_id")
  imageUrl                String?    @map("image_url")
      
  createdAt               DateTime   @map("created_at") @default(now())
  updatedAt               DateTime   @map("updated_at") @updatedAt
  expense                 Expense[]
  account                 Account[]
  // transaction             Transaction[]
  investment              Investment[]
  InvestmentTransaction   InvestmentTransaction[]

  @@map("user")
}

model Expense {
  id                String              @id @default(uuid())
  user              User                @relation(fields: [userId], references: [id])
  userId            String              @map("user_id")
  title             String
  imageUrl          String?             @map("image_url")
  isPaid            Boolean             @map("is_paid")
  isActive          Boolean             @map("is_active")
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")

  @@map("expense")
}

model Account {
  id                String              @id @default(uuid())
  user              User                @relation(fields: [userId], references: [id])
  userId            String              @map("user_id")
  name              String
  balance           Float               @default(0)
  icon              String?
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")

  investment        Investment[]

  @@map("account")
}

// model Transaction {
//   id                      String                @id @default(uuid())
//   user                    User                  @relation(fields: [userId], references: [id])
//   userId                  String                @map("user_id")
//   title                   String            
//   associatedTo            String                @map("associated_to")           
//   category                String            
//   amount                  Decimal            
//   paymentDate             DateTime              @map("payment_date")
//   paymentMethod           String                @map("payment_method")
//   createdAt               DateTime              @default(now()) @map("created_at")
//   updatedAt               DateTime              @updatedAt @map("updated_at")

//   @@map("transaction")
// }

model Investment {
  id                      String              @id @default(uuid())
  user                    User                @relation(fields: [userId], references: [id])
  userId                  String              @map("user_id")
  account                 Account?            @relation(fields: [accountId], references: [id])
  accountId               String?             @map("account_id")
      
  category                String
  ticker                  String              @unique
  type                    String?
  pricePerQuantity        Float               @map("price_per_quantity")     @default(0)
  totalQuantity           Float               @map("total_quantity")         @default(0)
  totalPaidPrice          Float               @map("total_paid_price")       @default(0)
  totalPrice              Float               @map("total_price")            @default(0)
  allocation              Float               @default(0)
  createdAt               DateTime            @default(now()) @map("created_at")
  updatedAt               DateTime            @updatedAt @map("updated_at")

  investmentTransaction   InvestmentTransaction[]

  @@map("investment")
}

model InvestmentTransaction {
  id                String              @id @default(uuid())
  user              User                @relation(fields: [userId], references: [id])
  userId            String              @map("user_id")
  investment        Investment          @relation(fields: [investmentId], references: [id])
  investmentId      String              @map("investment_id")

  pricePerQuantity  Float               @map("price_per_quantity")
  pricePaid         Float               @map("price_paid")
  quantity          Float
  createdAt         DateTime            @default(now()) @map("created_at")
  updatedAt         DateTime            @updatedAt @map("updated_at")

  @@map("investment_transaction")
}